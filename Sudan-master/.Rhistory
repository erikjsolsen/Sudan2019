a
i<-2
j <- 2
y <- subset(catch, survey==s[i])
View(y)
ay_1 <- data.frame(survey=integer(), id=integer(), Ntraps=integer(), Nhl=integer(), NGn=integer(), TBhrs=double(), HLhrs=double(), GNhrs=double(), DepthAvg=double(), DepthMax=double(), DepthMin=double())
ya <- subset(y, id==a[j])
View(ya)
mean(subset(ya, gear=="TB")[!duplicated(ya$station),]$depth, na.rm=TRUE)
max(subset(ya, gear=="TB")[!duplicated(ya$station),]$depth, na.rm=TRUE)
summary(ya$depth)
summary(subset(ya, gear=="TB"))
subset(ya, depth>100)
subset(ya, ss=2013002197)
max(subset(ya, gear=="TB")[!duplicated(ya$station),]$depth, na.rm=TRUE)
max(subset(ya, gear=="TB")[ya$station,]$depth, na.rm=TRUE)
max(subset(ya, gear=="TB")$depth, na.rm=TRUE)
ay_info <- data.frame(survey=integer(), id=integer(), Ntraps=integer(), Nhl=integer(), NGn=integer(), TBhrs=double(), HLhrs=double(), GNhrs=double(), DepthAvg=double(), DepthMax=double(), DepthMin=double())
cn <- colnames(ay_info)
for (i in 1:length(s)) {
y <- subset(catch, survey==s[i])
for (j in 1: length(a)){
ay_1 <- data.frame(survey=integer(), id=integer(), Ntraps=integer(), Nhl=integer(), NGn=integer(), TBhrs=double(), HLhrs=double(), GNhrs=double(), DepthAvg=double(), DepthMax=double(), DepthMin=double())
ya <- subset(y, id==a[j])
ay_1 <- rbind(ay_1, c(
as.integer(as.character(ya$survey[1])),
as.integer(as.character(ya$id[1])),
length(unique(subset(ya, gear=="TB")$station)),
length(unique(subset(ya, gear=="HL")$station)),
length(unique(subset(ya, gear=="GN")$station)),
sum(subset(ya, gear=="TB")[!duplicated(ya$station),]$Fhrs, na.rm=TRUE),
sum(subset(ya, gear=="HL")[!duplicated(ya$station),]$Fhrs, na.rm=TRUE),
sum(subset(ya, gear=="GN")[!duplicated(ya$station),]$Fhrs, na.rm=TRUE),
mean(subset(ya, gear=="TB")[!duplicated(ya$station),]$depth, na.rm=TRUE),
max(subset(ya, gear=="TB")$depth, na.rm=TRUE),
min(subset(ya, gear=="TB")$depth, na.rm=TRUE)    ))
colnames(ay_1) <- cn
ay_info <- rbind(ay_info, ay_1)
colnames(ay_info) <- cn
}
}
write.csv2(ay_info, "Area_Station_table.csv")
duplicated(ya$station)
!duplicated(ya$station)
ya$station
ya$ss
summary(catch$weight)
subset(catch, weight>20)
#' species pr area
#' -----------------------
sp.pr.area <- subset(catch1, gear=="GN" | gear=="TB" | gear=="HL") %>% group_by(id) %>% summarise(n_distinct(species))
colnames(sp.pr.area) <- c("id", "Nsp")
summary(sp.pr.area)
#' add sampling stations pr area
sp.pr.area$NArea <- n.area$nos[match(sp.pr.area$id, n.area$id)]
#' SPECIES NUMBERS PLOTS
species.plot<-ggplot(sp.pr.area, aes(x=id, y=Nsp)) + geom_bar(stat="identity", fill="steelblue") +theme_bw() + scale_x_reverse(breaks=c(1,2,3,4,5,6,7))
species.plot  + coord_flip() + theme(legend.title = element_text(size=14, face="bold")) + theme(legend.text = element_text(size=12)) + ylab("Number of species caught") + xlab("Management areas from N (1) to S (7)")
View(sp.pr.area)
#' species pr area
#' -----------------------
sp.pr.area <- subset(catch1, gear=="GN" | gear=="TB" | gear=="HL") %>% group_by(id) %>% summarise(n_distinct(species))
colnames(sp.pr.area) <- c("id", "Nsp")
summary(sp.pr.area)
#' add sampling stations pr area
sp.pr.area$NArea <- n.area$nos[match(sp.pr.area$id, n.area$id)]
sp.pr.area$Species_by_NoStations <- sp.pr.area$Nsp / sp.pr.area$NArea
#' species pr area
#' -----------------------
sp.pr.area <- subset(catch1, gear=="TB") %>% group_by(id) %>% summarise(n_distinct(species))
colnames(sp.pr.area) <- c("id", "Nsp")
summary(sp.pr.area)
#' add sampling stations pr area
sp.pr.area$NArea <- n.area$nos[match(sp.pr.area$id, n.area$id)]
sp.pr.area$Species_by_NoStations <- sp.pr.area$Nsp / sp.pr.area$NArea
#' SPECIES NUMBERS PLOTS
species.plot<-ggplot(sp.pr.area, aes(x=id, y=Nsp)) + geom_bar(stat="identity", fill="steelblue") +theme_bw() + scale_x_reverse(breaks=c(1,2,3,4,5,6,7))
species.plot  + coord_flip() + theme(legend.title = element_text(size=14, face="bold")) + theme(legend.text = element_text(size=12)) + ylab("Number of species caught") + xlab("Management areas from N (1) to S (7)")
#' species pr area
#' -----------------------
sp.pr.area <- subset(catch1, gear=="TB") %>% group_by(id) %>% summarise(n_distinct(species))
colnames(sp.pr.area) <- c("id", "Nsp")
summary(sp.pr.area)
#' add sampling stations pr area
sp.pr.area$NArea <- n.area$nos[match(sp.pr.area$id, n.area$id)]
sp.pr.area$Species_by_NoStations <- sp.pr.area$Nsp / sp.pr.area$NArea
#' SPECIES NUMBERS PLOTS
species.plot<-ggplot(sp.pr.area, aes(x=id, y=Nsp)) + geom_bar(stat="identity", fill="steelblue") +theme_bw() + scale_x_reverse(breaks=c(1,2,3,4,5,6,7))
species.plot  + coord_flip() + theme(legend.title = element_text(size=14, face="bold")) + theme(legend.text = element_text(size=12)) + ylab("Number of species caught") + xlab("Management areas from N (1) to S (7)")
#' SPECIES NUMBERS PLOTS
species.plot<-ggplot(sp.pr.area, aes(x=id, y=Species_by_NoStations)) + geom_bar(stat="identity", fill="steelblue") +theme_bw() + scale_x_reverse(breaks=c(1,2,3,4,5,6,7))
species.plot  + coord_flip() + theme(legend.title = element_text(size=14, face="bold")) + theme(legend.text = element_text(size=12)) + ylab("Number of species caught") + xlab("Management areas from N (1) to S (7)")
summary(catch1)
summary(catch)
sp_n_area <- catch %>% group_by(name) %>% summarise(Tot_N_species=n_distinct(Sci_name))
View(sp_n_area)
View(n.area)
View(c3)
#' species pr area - TRAPS only
#' -----------------------
sp.pr.area <- subset(catch1, gear=="TB") %>% group_by(id) %>% summarise(n_distinct(species), n_distinct((ss)))
colnames(sp.pr.area) <- c("id", "Nsp","NTraps")
summary(sp.pr.area)
sp.pr.area$Species_by_NoStations <- sp.pr.area$Nsp / sp.pr.area$NTraps
head(catch1)
summary(catch1)
#' species pr area - TRAPS only
#' -----------------------
sp.pr.area <- subset(catch1, gear=="TB") %>% group_by(id) %>% summarise(n_distinct(species), n_distinct(ss), n_distinct(specie!="NOCATCH"))
#' species pr area - TRAPS only
#' -----------------------
sp.pr.area <- subset(catch1, gear=="TB") %>% group_by(id) %>% summarise(n_distinct(species), n_distinct(ss), n_distinct(species!="NOCATCH"))
#' species pr area - TRAPS only
#' -----------------------
sp.pr.area <- subset(catch1, gear=="TB") %>% group_by(id) %>% summarise(n_distinct(species), n_distinct(ss))
colnames(sp.pr.area) <- c("id", "Nsp","NTraps")
summary(sp.pr.area)
#' species pr area - TRAPS only
#' -----------------------
sp.pr.area <- subset(catch1, gear=="TB" & species!="NOCATCH") %>% group_by(id) %>% summarise(n_distinct(species), n_distinct(ss))
colnames(sp.pr.area) <- c("id", "Nsp","NTraps")
summary(sp.pr.area)
head(catch1)
subset(catch1, number==0)
subset(catch1, weight==0)
#' species pr area - TRAPS only
#' -----------------------
sp.pr.area <- subset(catch, gear=="TB") %>% group_by(id) %>% summarise(n_distinct(species), n_distinct(ss))
colnames(sp.pr.area) <- c("id", "Nsp","NTraps")
summary(sp.pr.area)
sp.pr.area$Species_by_NoStations <- sp.pr.area$Nsp / sp.pr.area$NTraps
summary(catch)
#' species pr area - TRAPS only
#' -----------------------
sp.pr.area <- subset(catch, gear=="TB") %>% group_by(id) %>% summarise(n_distinct(species), n_distinct(ss), mean(Fhrs))
colnames(sp.pr.area) <- c("id", "Nsp","NTraps", "Fhrs")
summary(sp.pr.area)
sp.pr.area$Species_by_NoStations <- sp.pr.area$Nsp / sp.pr.area$NTraps
sp.pr.area$Species_Hrs <- sp.pr.area$Nsp / sp.pr.area$Fhrs
#' SPECIES NUMBERS PLOTS
species.plot<-ggplot(sp.pr.area, aes(x=id, y=Species_Hrs)) + geom_bar(stat="identity", fill="steelblue") +theme_bw() + scale_x_reverse(breaks=c(1,2,3,4,5,6,7))
species.plot  + coord_flip() + theme(legend.title = element_text(size=14, face="bold")) + theme(legend.text = element_text(size=12)) + ylab("Number of species caught") + xlab("Management areas from N (1) to S (7)")
species.plot  + coord_flip() + theme(legend.title = element_text(size=14, face="bold")) + theme(legend.text = element_text(size=12)) + ylab("Number of species caught in traps pr hour fishing") + xlab("Management areas from N (1) to S (7)")
ggsave("~/ownCloud/Research/Sudan/Distribution diversity LW paper/ICES ASC 2019/No species pr area.png")
setwd("..")
#'  SPATIAL POLYGONS FOR MANAGEMENT AREAS
#' -------------------------------------------
setwd("~/sudan_management_areas")
getwd()
#'  SPATIAL POLYGONS FOR MANAGEMENT AREAS
#' -------------------------------------------
setwd("/Users/eriko/Documents/GitHub/Sudan2019/Sudan-master")
setwd("~/sudan_management_areas")
setwd("./sudan_management_areas")
setwd("..")
getwd()
library(reshape2)
library(maps)
library(mapdata)
library(ggplot2)
library(RColorBrewer)
library(sp)
library(rgdal)
library(rgeos)
# plyr mus be loaded befor dplyr for both to work
library(plyr)
library(dplyr)
library(tidyr)
library(maptools)
library(marmap)
library(classInt)
library(colorspace)
capwords <- function(s, strict = FALSE) {
cap <- function(s) paste(toupper(substring(s, 1, 1)),
{s <- substring(s, 2); if(strict) tolower(s) else s},
sep = "", collapse = " " )
sapply(strsplit(s, split = " "), cap, USE.NAMES = !is.null(names(s)))
}
#' Catch data
catch<-read.csv2("catch.csv")
catch$survey<-as.factor(catch$survey)
catch$CPUEw<-catch$weight/catch$Fhrs
catch$CPUEn<-catch$number/catch$Fhrs
#' Station
station <- read.csv2("stations.csv")
#' add depth to catch from station
catch$d1<- station$geardepthstart[match(catch$ss, station$ss)]
catch$depth <- apply(X=cbind(catch$bdep, catch$d1), MARGIN=1, FUN=max, na.rm=TRUE)
#' Add Month. Year survey column
catch$survey_m<-as.character(catch$survey)
catch$survey_m<-replace(catch$survey_m, grep("2012901", catch$survey_m), "Survey 1: Nov. 2012")
catch$survey_m<-replace(catch$survey_m, grep("2013002", catch$survey_m), "Survey 2: May 2013")
catch$survey_m<-replace(catch$survey_m, grep("2013005", catch$survey_m), "Survey 3: Nov. 2013")
#'Traits
traits <- read.csv2("traits_noNa.csv")
#' SUDAN MAP DATA
world<- map_data("worldHires", c("Sudan", "Ethiopia"))
world$survey_m<-c("Survey 1: Nov. 2012")
world2<-world
world2$survey_m<-c("Survey 2: May 2013")
world3<-world
world3$survey_m<-c("Survey 3: Nov. 2013")
world<-rbind(world, world2, world3)
#'  SPATIAL POLYGONS FOR MANAGEMENT AREAS
setwd("/Users/eriko/Documents/GitHub/Sudan2019/Sudan-master")
setwd("./sudan_management_areas")
ManageAreas<-readOGR(dsn = ".", "sudan_regions")
setwd("..")
#' setting correct projection LAT LON
ManageAreas <- spTransform(ManageAreas, CRS("+proj=longlat +ellps=GRS80"))
#' Create  area map with numbers for each region
ManageAreas.f<-fortify(ManageAreas, region="id") #creates X - Y points of the polygons
cnames <- aggregate(cbind(long, lat) ~ id, data=ManageAreas.f, FUN=function(x)mean(range(x)))
cnames$id<-c(1:7)
#' position of Port Sudan
ps<-rbind(data.frame(x=37.21709967,y=19.600512, group=1, survey_m=c("Survey 1: Nov. 2012")),data.frame(x=37.21709967,y=19.600512, group=1, survey_m=c("Survey 2: May 2013") ),data.frame(x=37.21709967,y=19.600512, group=1, survey_m=c("Survey 3: Nov. 2013") ))
#' Create spatial.points data base from catch
catch.points<- SpatialPoints(catch[8:9])
proj4string(catch.points) <- proj4string(ManageAreas)
catch.areas<-over(catch.points, ManageAreas)
#' fix area number to area name
alist<-data.frame(name=levels(catch.areas$name), id=c(7,3,2,1,4,5,6))
catch <- cbind(catch, catch.areas[2])
catch$id <- alist$id[match(catch$name, alist$name)]
#' allocate management areas to catches outside of polygons (choose nearest polygon)
naarea <- catch[is.na(catch$id),]
naarea$id <- naarea$Area
naarea$name[1] <- c("Arakiai")
naarea$name[2:8] <- c("Suakin Archipelago")
naarea$name[9:16] <- c("Donganab")
catch<- rbind(subset(catch, id>=1), naarea)
#' Keep a copy of original 'catch'
catch.unmod <- catch
#' remove Hand Line stations with too short time <1 hr, and too long time >8 hrs
hist((subset(catch, gear=="HL" & Fhrs>0))$Fhrs, breaks =20) # get an idea of the spread in fishing time
catch <- rbind(subset(catch, gear!="HL"), subset(catch, gear=="HL" & Fhrs>1 & Fhrs<8))
#' selecting only stations with catch & removes stations shorter than 1 hour - two handline stations with fishing time recorded as 5min, that we know is wrong, but we don't have the correct time.
catch1<-subset(catch, Sci_name!="No catch" & Sci_name!="NO CATCH")
#' reordering the species groups
fam.names<-c("ACANTHURIDAE", "CARANGIDAE", "CHIROCENTRIDAE", "LETHRINIDAE", "LUTJANIDAE", "SCOMBRIDAE",     "SERRANIDAE", "OTHER SPP" )
levels(catch1$FamGroup)<-fam.names
catch.traits <- catch1
catch.traits$MaxLength<- traits$MaxLength[match(catch1$Sci_name, traits$x1)]
catch.traits$TrophicLevel<- traits$Trophic.Level[match(catch1$Sci_name, traits$x1)]
catch.traits$TrophicGroup<- traits$Trophic.group[match(catch1$Sci_name, traits$x1)]
catch.traits$WaterCol<- traits$Water.column[match(catch1$Sci_name, traits$x1)]
catch.traits$DielActivity<- traits$Diel.Activity[match(catch1$Sci_name, traits$x1)]
catch.traits$Habitat<- traits$Habitat[match(catch1$Sci_name, traits$x1)]
catch.traits$Gregariousness<- traits$Gregariousness[match(catch1$Sci_name, traits$x1)]
catch.traits$Sci_name_New<- traits$x2[match(catch1$Sci_name, traits$x1)]
#catch.traits$TrophicLevel[catch.traits$Sci_name=="Plectorhinchus gaterinus"] <- c(4)
#' collate Trophic groups and give shorter names
tn<-data.frame(TCat=levels(catch.traits$TrophicGroup), short=c("Invert.", "Herb.", "Coral.", "Carni.", "Plankt.", "Herb."))
catch.traits$TGShort <- tn$short[match(catch.traits$TrophicGroup, tn$TCat)]
#' select only Traps, Gillnet and Handline
catch.traits <- subset(catch.traits, gear=="HL" | gear=="TB" | gear=="GN")
catch.traits$ss1 <- as.factor(catch.traits$ss)
#' add number of stations in that area to each line
c3 <- catch.traits %>% group_by(ss1) %>% summarise( first(depth), first(gear), first(id), first(survey), first(survey_m))
colnames(c3) <- c("ss", "depth", "gear", "id", "survey", "survey_m")
colnames(c3)
colnames(c3) <- c("ss", "depth", "gear", "id", "survey", "survey_m")
catch.traits <- catch1
catch.traits$MaxLength<- traits$MaxLength[match(catch1$Sci_name, traits$x1)]
catch.traits$TrophicLevel<- traits$Trophic.Level[match(catch1$Sci_name, traits$x1)]
catch.traits$TrophicGroup<- traits$Trophic.group[match(catch1$Sci_name, traits$x1)]
catch.traits$WaterCol<- traits$Water.column[match(catch1$Sci_name, traits$x1)]
catch.traits$DielActivity<- traits$Diel.Activity[match(catch1$Sci_name, traits$x1)]
catch.traits$Habitat<- traits$Habitat[match(catch1$Sci_name, traits$x1)]
catch.traits$Gregariousness<- traits$Gregariousness[match(catch1$Sci_name, traits$x1)]
catch.traits$Sci_name_New<- traits$x2[match(catch1$Sci_name, traits$x1)]
#catch.traits$TrophicLevel[catch.traits$Sci_name=="Plectorhinchus gaterinus"] <- c(4)
#' collate Trophic groups and give shorter names
tn<-data.frame(TCat=levels(catch.traits$TrophicGroup), short=c("Invert.", "Herb.", "Coral.", "Carni.", "Plankt.", "Herb."))
catch.traits$TGShort <- tn$short[match(catch.traits$TrophicGroup, tn$TCat)]
#' select only Traps, Gillnet and Handline
catch.traits <- subset(catch.traits, gear=="HL" | gear=="TB" | gear=="GN")
catch.traits$ss1 <- as.factor(catch.traits$ss)
#' add number of stations in that area to each line
c3 <- catch.traits %>% group_by(ss1) %>% summarise( first(depth), first(gear), first(id), first(survey), first(survey_m))
colnames(c3)
colnames(c3) <- c("depth", "gear", "id", "survey", "survey_m")
n.area <- c3 %>% group_by(id) %>% summarise(n())
catch.traits <- catch1
catch.traits$MaxLength<- traits$MaxLength[match(catch1$Sci_name, traits$x1)]
catch.traits$TrophicLevel<- traits$Trophic.Level[match(catch1$Sci_name, traits$x1)]
catch.traits$TrophicGroup<- traits$Trophic.group[match(catch1$Sci_name, traits$x1)]
catch.traits$WaterCol<- traits$Water.column[match(catch1$Sci_name, traits$x1)]
catch.traits$DielActivity<- traits$Diel.Activity[match(catch1$Sci_name, traits$x1)]
catch.traits$Habitat<- traits$Habitat[match(catch1$Sci_name, traits$x1)]
catch.traits$Gregariousness<- traits$Gregariousness[match(catch1$Sci_name, traits$x1)]
catch.traits$Sci_name_New<- traits$x2[match(catch1$Sci_name, traits$x1)]
#catch.traits$TrophicLevel[catch.traits$Sci_name=="Plectorhinchus gaterinus"] <- c(4)
#' collate Trophic groups and give shorter names
tn<-data.frame(TCat=levels(catch.traits$TrophicGroup), short=c("Invert.", "Herb.", "Coral.", "Carni.", "Plankt.", "Herb."))
catch.traits$TGShort <- tn$short[match(catch.traits$TrophicGroup, tn$TCat)]
#' select only Traps, Gillnet and Handline
catch.traits <- subset(catch.traits, gear=="HL" | gear=="TB" | gear=="GN")
catch.traits$ss1 <- as.factor(catch.traits$ss)
#' add number of stations in that area to each line
c3 <- catch.traits %>% group_by(ss1) %>% summarise( first(depth), first(gear), first(id), first(survey), first(survey_m))
colnames(c3) <- c("depth", "gear", "id", "survey", "survey_m")
n.area <- c3 %>% group_by(id) %>% summarise(n())
catch<-read.csv2("catch.csv")
catch$survey<-as.factor(catch$survey)
catch$CPUEw<-catch$weight/catch$Fhrs
catch$CPUEn<-catch$number/catch$Fhrs
#' import station
station <- read.csv2("stations.csv")
#' add depth to catch from station
catch$d1<- station$geardepthstart[match(catch$ss, station$ss)]
catch$depth <- apply(X=cbind(catch$bdep, catch$d1), MARGIN=1, FUN=max, na.rm=TRUE)
#' Add Month. Year survey column
catch$survey_m<-as.character(catch$survey)
catch$survey_m<-replace(catch$survey_m, grep("2012901", catch$survey_m), "Survey 1: Nov. 2012")
catch$survey_m<-replace(catch$survey_m, grep("2013002", catch$survey_m), "Survey 2: May 2013")
catch$survey_m<-replace(catch$survey_m, grep("2013005", catch$survey_m), "Survey 3: Nov. 2013")
#' Species, L-W data and Traits
species.list<-read.csv2("Species_table.csv")
length.weight<-read.csv2("LW_pilot_sudan12_15.csv")
traits <- read.csv2("traits_noNa.csv")
#traits$MaxLength <-  as.numeric(levels(traits$MaxLength))[traits$MaxLength]
#traits$Trophic.Level <-  as.numeric(levels(traits$Trophic.Level))[traits$Trophic.Level]
#' SUDAN MAP DATA
#' ---------------------------
world<- map_data("worldHires", c("Sudan", "Ethiopia"))
world$survey_m<-c("Survey 1: Nov. 2012")
world2<-world
world2$survey_m<-c("Survey 2: May 2013")
world3<-world
world3$survey_m<-c("Survey 3: Nov. 2013")
world<-rbind(world, world2, world3)
#'  SPATIAL POLYGONS FOR MANAGEMENT AREAS
#' -------------------------------------------
#setwd("~/github/sudan/sudan_management_areas/")
setwd("~/Documents/GitHub/Sudan2019/Sudan-master/sudan_management_areas")
ManageAreas<-readOGR(dsn = ".", "sudan_regions")
#setwd("~/github/sudan")
setwd("~/Documents/GitHub/Sudan2019/Sudan-master")
#' setting correct projection LAT LON
ManageAreas <- spTransform(ManageAreas, CRS("+proj=longlat +ellps=GRS80"))
#' Create  area map with numbers for each region
ManageAreas.f<-fortify(ManageAreas, region="id") #creates X - Y points of the polygons
cnames <- aggregate(cbind(long, lat) ~ id, data=ManageAreas.f, FUN=function(x)mean(range(x)))
cnames$id<-c(1:7)
#' DEFINE VARIABLES
#' ---------------------------
#' position of Port Sudan
ps<-rbind(data.frame(x=37.21709967,y=19.600512, group=1, survey_m=c("Survey 1: Nov. 2012")),data.frame(x=37.21709967,y=19.600512, group=1, survey_m=c("Survey 2: May 2013") ),data.frame(x=37.21709967,y=19.600512, group=1, survey_m=c("Survey 3: Nov. 2013") ))
#' ALLOCATING CATCH POSITIONS TO MANAGEMENT AREAS
#' ---------------------------
#' use 'over' method from SP package
#' Create spatial.points data base from catch
catch.points<- SpatialPoints(catch[8:9])
proj4string(catch.points) <- proj4string(ManageAreas)
catch.areas<-over(catch.points, ManageAreas)
#' fix area number to area name
alist<-data.frame(name=levels(catch.areas$name), id=c(7,3,2,1,4,5,6))
catch <- cbind(catch, catch.areas[2])
catch$id <- alist$id[match(catch$name, alist$name)]
#' allocate management areas to catches outside of polygons (choose nearest polygon)
naarea <- catch[is.na(catch$id),]
naarea$id <- naarea$Area
naarea$name[1] <- c("Arakiai")
naarea$name[2:8] <- c("Suakin Archipelago")
naarea$name[9:16] <- c("Donganab")
catch<- rbind(subset(catch, id>=1), naarea)
#' SELECTING AND MANIPULATING CATCH DATA
#' -----------------------------------
#' Keep a copy of original 'catch'
catch.unmod <- catch
#' remove Hand Line stations with too short time <1 hr, and too long time >8 hrs
hist((subset(catch, gear=="HL" & Fhrs>0))$Fhrs, breaks =20) # get an idea of the spread in fishing time
catch <- rbind(subset(catch, gear!="HL"), subset(catch, gear=="HL" & Fhrs>1 & Fhrs<8))
#' selecting only stations with catch & removes stations shorter than 1 hour - two handline stations with fishing time recorded as 5min, that we know is wrong, but we don't have the correct time.
catch1<-subset(catch, Sci_name!="No catch" & Sci_name!="NO CATCH")
#' reordering the species groups
fam.names<-c("ACANTHURIDAE", "CARANGIDAE", "CHIROCENTRIDAE", "LETHRINIDAE", "LUTJANIDAE", "SCOMBRIDAE",     "SERRANIDAE", "OTHER SPP" )
levels(catch1$FamGroup)<-fam.names
#' ADDING TRAITS DATA TO CATCH TABLE
#' ---------------------------------
catch.traits <- catch1
catch.traits$MaxLength<- traits$MaxLength[match(catch1$Sci_name, traits$x1)]
catch.traits$TrophicLevel<- traits$Trophic.Level[match(catch1$Sci_name, traits$x1)]
catch.traits$TrophicGroup<- traits$Trophic.group[match(catch1$Sci_name, traits$x1)]
catch.traits$WaterCol<- traits$Water.column[match(catch1$Sci_name, traits$x1)]
catch.traits$DielActivity<- traits$Diel.Activity[match(catch1$Sci_name, traits$x1)]
catch.traits$Habitat<- traits$Habitat[match(catch1$Sci_name, traits$x1)]
catch.traits$Gregariousness<- traits$Gregariousness[match(catch1$Sci_name, traits$x1)]
catch.traits$Sci_name_New<- traits$x2[match(catch1$Sci_name, traits$x1)]
catch.traits$TrophicLevel[catch.traits$Sci_name=="Plectorhinchus gaterinus"] <- c(4)
#' collate Trophic groups and give shorter names
tn<-data.frame(TCat=levels(catch.traits$TrophicGroup), short=c("Invert.", "Herb.", "Coral.", "Carni.", "Plankt.", "Herb."))
catch.traits$TGShort <- tn$short[match(catch.traits$TrophicGroup, tn$TCat)]
#' ANALYSIS OF CATCHES BY TRAIT AND DEPTH
#' (NEW FOR FEB.2019 REVISION)
#' -------------------------------------
#'
#' remove all catches without traits (these are generally cathces not iD.ed to species, and a few species for which traits were not found.)
#' select only Traps, Gillnet and Handline
catch.traits <- subset(catch.traits, gear=="HL" | gear=="TB" | gear=="GN")
catch.traits$ss1 <- as.factor(catch.traits$ss)
#' add number of stations in that area to each line
c3 <- catch.traits %>% group_by(ss1) %>% summarise( first(depth), first(gear), first(id), first(survey), first(survey_m))
colnames(c3) <- c("ss", "depth", "gear", "id", "survey", "survey_m")
colnames(c3) <- c("depth", "gear", "id", "survey", "survey_m")
colnames(c3)
colnames(c3) <- c("depth", "gear", "id", "survey", "survey_m")
catch.traits <- catch1
catch.traits$MaxLength<- traits$MaxLength[match(catch1$Sci_name, traits$x1)]
catch.traits$TrophicLevel<- traits$Trophic.Level[match(catch1$Sci_name, traits$x1)]
catch.traits$TrophicGroup<- traits$Trophic.group[match(catch1$Sci_name, traits$x1)]
catch.traits$WaterCol<- traits$Water.column[match(catch1$Sci_name, traits$x1)]
catch.traits$DielActivity<- traits$Diel.Activity[match(catch1$Sci_name, traits$x1)]
catch.traits$Habitat<- traits$Habitat[match(catch1$Sci_name, traits$x1)]
catch.traits$Gregariousness<- traits$Gregariousness[match(catch1$Sci_name, traits$x1)]
catch.traits$Sci_name_New<- traits$x2[match(catch1$Sci_name, traits$x1)]
#catch.traits$TrophicLevel[catch.traits$Sci_name=="Plectorhinchus gaterinus"] <- c(4)
#' collate Trophic groups and give shorter names
tn<-data.frame(TCat=levels(catch.traits$TrophicGroup), short=c("Invert.", "Herb.", "Coral.", "Carni.", "Plankt.", "Herb."))
catch.traits$TGShort <- tn$short[match(catch.traits$TrophicGroup, tn$TCat)]
#' select only Traps, Gillnet and Handline
catch.traits <- subset(catch.traits, gear=="HL" | gear=="TB" | gear=="GN")
catch.traits$ss1 <- as.factor(catch.traits$ss)
#' add number of stations in that area to each line
c3 <- catch.traits %>% group_by(ss1) %>% summarise( first(depth), first(gear), first(id), first(survey), first(survey_m))
colnames(c3) <- c("depth", "gear", "id", "survey", "survey_m")
n.area <- c3 %>% group_by(id) %>% summarise(n())
catch.traits <- catch1
catch.traits$MaxLength<- traits$MaxLength[match(catch1$Sci_name, traits$x1)]
catch.traits$TrophicLevel<- traits$Trophic.Level[match(catch1$Sci_name, traits$x1)]
catch.traits$TrophicGroup<- traits$Trophic.group[match(catch1$Sci_name, traits$x1)]
catch.traits$WaterCol<- traits$Water.column[match(catch1$Sci_name, traits$x1)]
catch.traits$DielActivity<- traits$Diel.Activity[match(catch1$Sci_name, traits$x1)]
catch.traits$Habitat<- traits$Habitat[match(catch1$Sci_name, traits$x1)]
catch.traits$Gregariousness<- traits$Gregariousness[match(catch1$Sci_name, traits$x1)]
catch.traits$Sci_name_New<- traits$x2[match(catch1$Sci_name, traits$x1)]
#' collate Trophic groups and give shorter names
tn<-data.frame(TCat=levels(catch.traits$TrophicGroup), short=c("Invert.", "Herb.", "Coral.", "Carni.", "Plankt.", "Herb."))
catch.traits$TGShort <- tn$short[match(catch.traits$TrophicGroup, tn$TCat)]
#' select only Traps, Gillnet and Handline
catch.traits <- subset(catch.traits, gear=="HL" | gear=="TB" | gear=="GN")
catch.traits$ss1 <- as.factor(catch.traits$ss)
#' add number of stations in that area to each line
c3 <- catch.traits %>% group_by(ss1) %>% summarise( first(depth), first(gear), first(id), first(survey), first(survey_m))
colnames(c3) <- c("depth", "gear", "id", "survey", "survey_m")
n.area <- c3 %>% group_by(id) %>% summarise(n())
n.area <- c3 %>% group_by(id) %>% summarise(n())
head(catch.traits)
#' add number of stations in that area to each line
c3 <- catch.traits %>% group_by(ss1) %>% summarise( first(ss), first(depth), first(gear), first(id), first(survey), first(survey_m))
colnames(c3) <- c("ss", "depth", "gear", "id", "survey", "survey_m")
n.area <- c3 %>% group_by(id) %>% summarise(distinct(ss))
summary(c3)
n.area <- c3 %>% group_by(id) %>% summarise(distinct(as.integer(ss)))
summary(catch.traits)
#' add number of stations in that area to each line
c3 <- catch.traits %>% group_by(ss1) %>% summarise( first(ss1), first(depth), first(gear), first(id), first(survey), first(survey_m))
colnames(c3) <- c("ss", "depth", "gear", "id", "survey", "survey_m")
n.area <- c3 %>% group_by(id) %>% summarise(distinct(ss))
n.area <- c3 %>% group_by(id) %>% summarise(n_distinct(ss))
colnames(n.area) <- c("id", "nos")
n.area
summary(c3)
summary(catch.traits)
c3
#' add number of stations in that area to each line
c3 <- catch.traits %>% group_by(ss1) %>% summarise( first(ss1), first(depth), first(gear), first(id), first(survey), first(survey_m))
c3
#' add number of stations in that area to each line
c3 <- catch.traits %>% group_by(ss) %>% summarise( first(ss1), first(depth), first(gear), first(id), first(survey), first(survey_m))
c3
summary(catch.traits)
catch.traits <- catch1
catch.traits$MaxLength<- traits$MaxLength[match(catch1$Sci_name, traits$x1)]
catch.traits$TrophicLevel<- traits$Trophic.Level[match(catch1$Sci_name, traits$x1)]
catch.traits$TrophicGroup<- traits$Trophic.group[match(catch1$Sci_name, traits$x1)]
catch.traits$WaterCol<- traits$Water.column[match(catch1$Sci_name, traits$x1)]
catch.traits$DielActivity<- traits$Diel.Activity[match(catch1$Sci_name, traits$x1)]
catch.traits$Habitat<- traits$Habitat[match(catch1$Sci_name, traits$x1)]
catch.traits$Gregariousness<- traits$Gregariousness[match(catch1$Sci_name, traits$x1)]
catch.traits$Sci_name_New<- traits$x2[match(catch1$Sci_name, traits$x1)]
catch.traits$TrophicLevel[catch.traits$Sci_name=="Plectorhinchus gaterinus"] <- c(4)
#' collate Trophic groups and give shorter names
tn<-data.frame(TCat=levels(catch.traits$TrophicGroup), short=c("Invert.", "Herb.", "Coral.", "Carni.", "Plankt.", "Herb."))
catch.traits$TGShort <- tn$short[match(catch.traits$TrophicGroup, tn$TCat)]
#' select only Traps, Gillnet and Handline
catch.traits <- subset(catch.traits, gear=="HL" | gear=="TB" | gear=="GN")
catch.traits$ss1 <- as.factor(catch.traits$ss)
#' add number of stations in that area to each line
c3 <- catch.traits %>% group_by(ss) %>% summarise( first(ss1), first(depth), first(gear), first(id), first(survey), first(survey_m))
colnames(c3) <- c("ss", "depth", "gear", "id", "survey", "survey_m")
c3
summary(catch1)
summary(catch.traits)
summary(catch)
#' add number of stations in that area to each line
c3 <- catch.traits %>% group_by(ss1) %>% summarise( first(ss1), first(depth), first(gear), first(id), first(survey), first(survey_m))
c3
summary(catch.traits)
levels(catch.traits$ss1)
catch.traits %>% group_by(ss1)
c33 <- catch.traits %>% group_by(ss1)
View(c33)
catch.traits %>% group_by(ss1) %>% summarise( mean(depth))
catch.traits %>% group_by(as.integer(ss1)) %>% summarise( mean(depth))
summary(catch.traits)
catch.traits %>% group_by(TGShort) %>% summarise( mean(depth))
library(dplyr)
#' add number of stations in that area to each line
c3 <- catch.traits %>% group_by(ss1) %>% summarise( first(ss1), first(depth), first(gear), first(id), first(survey), first(survey_m))
catch.traits %>% group_by(TGShort) %>% summarise( mean(depth))
